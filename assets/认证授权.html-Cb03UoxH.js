import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,d as i}from"./app-D5166FK3.js";const n={},a=i('<h2 id="认证方式" tabindex="-1"><a class="header-anchor" href="#认证方式"><span>认证方式</span></a></h2><h3 id="session、cookie、token" tabindex="-1"><a class="header-anchor" href="#session、cookie、token"><span>Session、Cookie、Token</span></a></h3><ol><li><p>Cookie存放在客户端，用来保存用户信息、首选项、记录状态、分别用户行为；敏感信息应该加密发送到服务器端去解密存储；Cookie是浏览器自动加在请求头上的</p><p>CSRF攻击（Cross-Site Reference Forgery)</p><p>Token存储在localStorage中。token是开发者为了防范CSRF而特别设计的令牌，浏览器不会自动添加到headers里，攻击者也无法访问用户的token，所以提交的表单无法通过服务器过滤，也就无法形成攻击。</p><p>都无法避免<strong>跨站脚本攻击（Cross Site Scripting）XSS</strong></p></li><li><p>Session保存在服务器端，安全性更高（在服务器端记录用户状态；购物车）</p></li></ol><h3 id="jwt-json-web-token" tabindex="-1"><a class="header-anchor" href="#jwt-json-web-token"><span>JWT （JSON Web Token）</span></a></h3><p>跨域认证、基于 Token 的认证授权机制、一种规范化之后的 JSON 结构的 Token</p><p>优点：</p><ol><li><p>无状态：服务器不需要存储Session信息</p></li><li><p>有效避免CSRF（跨站请求伪造）攻击：不依赖Cookie，JWT存储在localStorage中</p></li><li><p>适合移动端应用</p><blockquote><p>为什么Session不适合移动端？</p><ol><li>移动端连接不稳定</li><li>不同平台对于Session的管理和存储方式不同，兼容性差</li></ol></blockquote></li><li><p>单点登录友好</p></li></ol><p>缺点：</p><ol><li><p>不可控：因为服务器不存储，所以无法在有效期结束之前更改用户权限；用户退出登录/注销后等可能仍有效</p><p>解决方案：实际常用前两种，但违背了无状态原则</p><ul><li>有效的JWT存放到Redis中，失效删除</li><li>存储失效JWT（黑名单机制）</li><li>保持JWT有效期限短，经常轮换（但这样需要用户频繁登录，如果有表单很复杂，用户填完提交token就过期了，要重新登录填写，就很一言难尽了）</li></ul></li><li><p>续签问题：JWT过期之后如何动态刷新JWT，避免需要经常登录（如何实现用户无感知的续签？）</p></li><li><p>无法避免XSS攻击：一般处理XSS攻击通过创建 XSS 过滤器来过滤掉可疑字符串</p></li></ol><h2 id="权限系统" tabindex="-1"><a class="header-anchor" href="#权限系统"><span>权限系统</span></a></h2><h3 id="rbac模型-基于角色" tabindex="-1"><a class="header-anchor" href="#rbac模型-基于角色"><span>RBAC模型（基于角色）</span></a></h3><p>Role-Based Access Control</p><p>用户-角色-权限（menu）</p><p>都是多对多关系</p><p>对应RBAC权限模型，数据库常用设计为五张表，两张关系表，三张实体表</p><p>通常来说，如果系统对于权限控制要求比较严格的话，一般都会选择使用 RBAC 模型来做权限控制。</p><h3 id="abac模型-基于属性" tabindex="-1"><a class="header-anchor" href="#abac模型-基于属性"><span>ABAC模型（基于属性）</span></a></h3><p>Attribute-Based Access Control</p><p>常用于云系统，如阿里云</p><p>一个操作是否被允许是基于对象、资源、操作和环境信息共同动态计算决定的。感觉控制粒度比RBAC模型更细节，开发更复杂</p>',20),s=[a];function l(r,p){return t(),o("div",null,s)}const h=e(n,[["render",l],["__file","认证授权.html.vue"]]),k=JSON.parse(`{"path":"/backend/system-design/%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83.html","title":"认证授权","lang":"zh-CN","frontmatter":{"title":"认证授权","order":1,"copyright":"<a href=\\"https://creativecommons.org/licenses/by-nc/4.0/\\">CC BY-NC 4.0协议</a>","description":"认证方式 Session、Cookie、Token Cookie存放在客户端，用来保存用户信息、首选项、记录状态、分别用户行为；敏感信息应该加密发送到服务器端去解密存储；Cookie是浏览器自动加在请求头上的 CSRF攻击（Cross-Site Reference Forgery) Token存储在localStorage中。token是开发者为了防范...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/KKBlog/backend/system-design/%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83.html"}],["meta",{"property":"og:site_name","content":"KK's Blog"}],["meta",{"property":"og:title","content":"认证授权"}],["meta",{"property":"og:description","content":"认证方式 Session、Cookie、Token Cookie存放在客户端，用来保存用户信息、首选项、记录状态、分别用户行为；敏感信息应该加密发送到服务器端去解密存储；Cookie是浏览器自动加在请求头上的 CSRF攻击（Cross-Site Reference Forgery) Token存储在localStorage中。token是开发者为了防范..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-29T09:54:28.000Z"}],["meta",{"property":"article:author","content":"KK"}],["meta",{"property":"article:modified_time","content":"2024-06-29T09:54:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"认证授权\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-29T09:54:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KK\\",\\"url\\":\\"https://github.com/Nikki-Gu\\"}]}"]]},"headers":[{"level":2,"title":"认证方式","slug":"认证方式","link":"#认证方式","children":[{"level":3,"title":"Session、Cookie、Token","slug":"session、cookie、token","link":"#session、cookie、token","children":[]},{"level":3,"title":"JWT （JSON Web Token）","slug":"jwt-json-web-token","link":"#jwt-json-web-token","children":[]}]},{"level":2,"title":"权限系统","slug":"权限系统","link":"#权限系统","children":[{"level":3,"title":"RBAC模型（基于角色）","slug":"rbac模型-基于角色","link":"#rbac模型-基于角色","children":[]},{"level":3,"title":"ABAC模型（基于属性）","slug":"abac模型-基于属性","link":"#abac模型-基于属性","children":[]}]}],"git":{"createdTime":1715670016000,"updatedTime":1719654868000,"contributors":[{"name":"Nikki-Gu","email":"394632208@qq.com","commits":2}]},"readingTime":{"minutes":2.41,"words":723},"filePathRelative":"backend/system-design/认证授权.md","localizedDate":"2024年5月14日","autoDesc":true}`);export{h as comp,k as data};
