import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as r,d as t}from"./app-A9FpsPyv.js";const n={},a=t('<h1 id="spring" tabindex="-1"><a class="header-anchor" href="#spring"><span>Spring</span></a></h1><h3 id="spring和dagger的区别" tabindex="-1"><a class="header-anchor" href="#spring和dagger的区别"><span>Spring和Dagger的区别</span></a></h3><ul><li>功能： <ul><li>Spring功能广泛：依赖注入DI、面向切面编程AOP、事务管理、数据访问</li><li>Dagger是为Android平台设计的，主要用于依赖注入</li></ul></li><li>依赖注入实现： <ul><li>Spring是运行时依赖注入框架：灵活、运行时开销</li><li>Dagger是编译时依赖注入框架：安全、不灵活</li></ul></li></ul><h3 id="工厂模式和spring框架中ioc的区别" tabindex="-1"><a class="header-anchor" href="#工厂模式和spring框架中ioc的区别"><span>工厂模式和Spring框架中IOC的区别</span></a></h3><p>IOC：控制反转（Inversion of control）是一种设计思想，一个对象的属性里面定义了某个接口的实现类，也就是这个对象依赖于实现了这个接口的某个对象（可能有A、B、C都实现了这个接口），具体使用哪个对象是由一个管理所有对象的外界实体（IOC容器）将依赖的对象传递给</p><p>IOC是一种原则，不是一种设计模型，工厂模式和依赖注入（DI：Dependency Injection）都是尊从IOC原则的具体实现/设计模式</p><p>工厂模式：一种创建型设计模式，将对象的创建过程封装到工厂类中，通过创建工厂类来统一管理对象的创建过程</p><ul><li>简单工厂</li><li>工厂方法</li><li>抽象工厂</li></ul><p>依赖注入：</p><ul><li>依赖注入（DI）功能可以替代工厂模式，通过配置文件或注解来管理对象的创建和依赖关系</li><li>Spring中的实现是基于工厂方法和Java的反射机制的 <ul><li>反射：把Java中类映射成一个java对象（Class对象），是JVM自动创建的，是对类信息的管理，一个类只对应一个Class对象</li></ul></li><li>Spring中的IOC容器就是Map（Key：value）</li></ul><h3 id="aop是什么" tabindex="-1"><a class="header-anchor" href="#aop是什么"><span>AOP是什么</span></a></h3><p>将横切关注点从核心业务逻辑中分离出来，形成一个个的<strong>切面（Aspect）</strong></p><ul><li>比如日志功能、性能统计</li></ul><p>AOP的实现方法：</p><ul><li>动态代理：Spring AOP</li><li>字节码操作：AspectJ</li></ul>',15),p=[a];function l(o,g){return r(),i("div",null,p)}const d=e(n,[["render",l],["__file","Spring面试题.html.vue"]]),h=JSON.parse(`{"path":"/backend/frameworks/Spring%E9%9D%A2%E8%AF%95%E9%A2%98.html","title":"Spring","lang":"zh-CN","frontmatter":{"title":"Spring","order":3,"copyright":"<a href=\\"https://creativecommons.org/licenses/by-nc/4.0/\\">CC BY-NC 4.0协议</a>","description":"Spring Spring和Dagger的区别 功能： Spring功能广泛：依赖注入DI、面向切面编程AOP、事务管理、数据访问 Dagger是为Android平台设计的，主要用于依赖注入 依赖注入实现： Spring是运行时依赖注入框架：灵活、运行时开销 Dagger是编译时依赖注入框架：安全、不灵活 工厂模式和Spring框架中IOC的区别 IO...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/KKBlog/backend/frameworks/Spring%E9%9D%A2%E8%AF%95%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"KK's Blog"}],["meta",{"property":"og:title","content":"Spring"}],["meta",{"property":"og:description","content":"Spring Spring和Dagger的区别 功能： Spring功能广泛：依赖注入DI、面向切面编程AOP、事务管理、数据访问 Dagger是为Android平台设计的，主要用于依赖注入 依赖注入实现： Spring是运行时依赖注入框架：灵活、运行时开销 Dagger是编译时依赖注入框架：安全、不灵活 工厂模式和Spring框架中IOC的区别 IO..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-17T02:34:32.000Z"}],["meta",{"property":"article:author","content":"KK"}],["meta",{"property":"article:modified_time","content":"2024-05-17T02:34:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-17T02:34:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KK\\",\\"url\\":\\"https://github.com/Nikki-Gu\\"}]}"]]},"headers":[{"level":3,"title":"Spring和Dagger的区别","slug":"spring和dagger的区别","link":"#spring和dagger的区别","children":[]},{"level":3,"title":"工厂模式和Spring框架中IOC的区别","slug":"工厂模式和spring框架中ioc的区别","link":"#工厂模式和spring框架中ioc的区别","children":[]},{"level":3,"title":"AOP是什么","slug":"aop是什么","link":"#aop是什么","children":[]}],"git":{"createdTime":1715670016000,"updatedTime":1715913272000,"contributors":[{"name":"Nikki-Gu","email":"394632208@qq.com","commits":2}]},"readingTime":{"minutes":1.68,"words":503},"filePathRelative":"backend/frameworks/Spring面试题.md","localizedDate":"2024年5月14日","autoDesc":true}`);export{d as comp,h as data};
