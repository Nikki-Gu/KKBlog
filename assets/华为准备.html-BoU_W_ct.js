import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,d as e}from"./app-DJN3FSGS.js";const l={},i=e(`<p>ACM模式，处理输入输出，可以使用本地IDE</p><p>常考知识点： 基本操作：输入输出处理（重点），字符串操作与ASCii码（重点） 数据结构：一维数组，栈，队列 编程思想：暴力法（重点），递归 算法：排列组合（重点），快速排序（重点），二分查找，位运算，滑动窗口，深度优先搜索（进阶），广度优先搜索（进阶），搜索回溯（进阶）</p><p><a href="https://www.nowcoder.com/exam/oj/ta?tpId=37" target="_blank" rel="noopener noreferrer">牛客入口</a></p><h5 id="入门题" tabindex="-1"><a class="header-anchor" href="#入门题"><span>入门题</span></a></h5><ul class="task-list-container"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 输入处理（去看前两次笔试的题目）</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> HJ5.进制转换</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 两数之和</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 去重排序：HJ3.明明的随机数</label></p><p>使用TreeSet</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 哈希表：HJ10.字符个数统计</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 递归/动态规划：NC68.跳台阶</label></p></li></ul><h3 id="第一二题难度" tabindex="-1"><a class="header-anchor" href="#第一二题难度"><span>第一二题难度</span></a></h3><h4 id="字符串操作" tabindex="-1"><a class="header-anchor" href="#字符串操作"><span>字符串操作</span></a></h4><ul class="task-list-container"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> HJ17.坐标移动</label></p><p>字符串分割：<code>String[] s = in.next().split(&quot;;&quot;);</code></p><p>正则表达式：<code>tmp.matches(&quot;[WASD][0-9]{1,2}&quot;)</code></p><p>[数字/字母]{出现次数}</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> HJ20.密码验证合格程序</label></p><p>判断是否有长度大于2的子串重复：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">ifDup</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正则表达式</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Pattern</span> p2 <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;[a-z]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// true 表示能在str中找到满足p2正则表达式的部分</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> *HJ23.删除字符串中出现次数最少的字符</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> *HJ33.整数与IP地址间的转换</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> HJ101.输入整型数组和排序标识</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> *HJ106.字符串逆序</label></p></li></ul><h4 id="排序" tabindex="-1"><a class="header-anchor" href="#排序"><span>排序</span></a></h4><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> HJ8.合并表记录</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> *HJ14.字符串排序</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> HJ25.数据分类处理</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> HJ27.查找兄弟单词</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> *NC37.合并区间</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> *HJ68.成绩排序</label></li></ul><h4 id="栈" tabindex="-1"><a class="header-anchor" href="#栈"><span>栈：</span></a></h4><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> NC52.括号序列</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> *leetcode 1614.括号的最大嵌套深度</label></li></ul><h4 id="排列组合" tabindex="-1"><a class="header-anchor" href="#排列组合"><span>排列组合：</span></a></h4><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> *leetcode 面试题08.08.有重复字符串的排列组合</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> leetcode 77.组合</label></li></ul><h4 id="双指针" tabindex="-1"><a class="header-anchor" href="#双指针"><span>双指针：</span></a></h4><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> *leetcode 674.最长连续递增序列</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> NC17.最长回文子串</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> NC28.最小覆盖子串</label></li></ul><h4 id="深搜" tabindex="-1"><a class="header-anchor" href="#深搜"><span>深搜：</span></a></h4><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> HJ41.称砝码</label></li></ul><p>针对薄弱知识点查缺补漏题号: 字符串：3，49，30 线性表：86，16，27，732 队列：641，406，899 栈：946，116，117，895 哈希表：61，729，25，554 dfs：105，112，98，494，547，1254 bfs：1091，1129，102，101，752</p>`,19),n=[i];function c(p,o){return t(),a("div",null,n)}const b=s(l,[["render",c],["__file","华为准备.html.vue"]]),m=JSON.parse(`{"path":"/algorithm/coding-test/%E5%8D%8E%E4%B8%BA%E5%87%86%E5%A4%87.html","title":"华为笔试准备记录","lang":"zh-CN","frontmatter":{"title":"华为笔试准备记录","order":5,"copyright":"<a href=\\"https://creativecommons.org/licenses/by-nc/4.0/\\">CC BY-NC 4.0协议</a>","description":"ACM模式，处理输入输出，可以使用本地IDE 常考知识点： 基本操作：输入输出处理（重点），字符串操作与ASCii码（重点） 数据结构：一维数组，栈，队列 编程思想：暴力法（重点），递归 算法：排列组合（重点），快速排序（重点），二分查找，位运算，滑动窗口，深度优先搜索（进阶），广度优先搜索（进阶），搜索回溯（进阶） 牛客入口 入门题 输入处理（去看前...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/KKBlog/algorithm/coding-test/%E5%8D%8E%E4%B8%BA%E5%87%86%E5%A4%87.html"}],["meta",{"property":"og:site_name","content":"KK's Blog"}],["meta",{"property":"og:title","content":"华为笔试准备记录"}],["meta",{"property":"og:description","content":"ACM模式，处理输入输出，可以使用本地IDE 常考知识点： 基本操作：输入输出处理（重点），字符串操作与ASCii码（重点） 数据结构：一维数组，栈，队列 编程思想：暴力法（重点），递归 算法：排列组合（重点），快速排序（重点），二分查找，位运算，滑动窗口，深度优先搜索（进阶），广度优先搜索（进阶），搜索回溯（进阶） 牛客入口 入门题 输入处理（去看前..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-14T07:00:16.000Z"}],["meta",{"property":"article:author","content":"KK"}],["meta",{"property":"article:modified_time","content":"2024-05-14T07:00:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"华为笔试准备记录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-14T07:00:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KK\\",\\"url\\":\\"https://github.com/Nikki-Gu\\"}]}"]]},"headers":[{"level":3,"title":"第一二题难度","slug":"第一二题难度","link":"#第一二题难度","children":[]}],"git":{"createdTime":1715670016000,"updatedTime":1715670016000,"contributors":[{"name":"Nikki-Gu","email":"394632208@qq.com","commits":1}]},"readingTime":{"minutes":1.84,"words":553},"filePathRelative":"algorithm/coding-test/华为准备.md","localizedDate":"2024年5月14日","autoDesc":true}`);export{b as comp,m as data};
